{"version":3,"sources":["components/Navbar.js","components/Main.js","components/Footer.js","images/github.svg","App.js","styles.js","theme.js","index.js","components/Layout.js"],"names":["Navbar","children","props","useColorMode","colorMode","toggleColorMode","bg","useColorModeValue","as","align","justify","wrap","padding","sm","md","lg","xl","py","color","borderBottom","borderBottomColor","display","base","maxW","mx","px","w","direction","isInline","alignItems","flexWrap","spacing","React","Children","map","child","cloneElement","ReactRouterLink","Moon","onClick","ml","cursor","Sun","Main","id","fontFamily","flex","width","Footer","borderTop","borderTopColor","Layout","d","Home","lazy","Projects","Presentations","App","location","useLocation","console","log","pathname","minHeight","to","pt","fallback","exact","path","href","target","my","alt","src","GithubLogo","styles","global","mode","lineHeight","borderColor","wordWrap","fontFeatureSettings","fontVariantNumeric","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","basename","document","getElementById","fluid","columns","col","defaultProps"],"mappings":"yUAMaA,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBAChD,EAAuCC,cAA/BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBAEbC,EAAKC,YAAkB,OAAQ,YAErC,OACE,cAAC,IAAD,yBACEC,GAAG,MACHC,MAAM,SACNC,QAAQ,gBACRC,KAAK,OACLC,QAAS,CAAEC,GAAI,SAAUC,GAAI,UAAWC,GAAI,OAAQC,GAAI,QACxDC,GAAG,MACHX,GAAIA,EACJY,MAAM,UACNC,aAAa,YACbC,kBAAkB,WAClBC,QAAS,CAAEC,KAAM,OAAQR,GAAI,SACzBZ,GAZN,aAcE,eAAC,IAAD,CACEqB,KAAM,CAAEV,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,MACvCQ,GAAG,OACHC,GAAI,EACJC,EAAE,OACFjB,MAAM,SACNkB,UAAU,MANZ,UAQE,cAAC,IAAD,CACEC,UAAQ,EACRC,WAAW,SACXC,SAAS,OACTC,QAAQ,IACRL,EAAE,OALJ,SAOGM,IAAMC,SAASC,IAAIjC,GAAU,SAACkC,GAC7B,GAAc,OAAVA,EACF,OAAOH,IAAMI,aAAaD,EAAO,CAC/B3B,GAAI6B,WAKG,UAAdjC,EACC,cAACkC,EAAA,EAAD,CACE9B,GAAG,SACH+B,QAASlC,EACTmC,GAAG,OACHC,OAAO,YAGT,cAACC,EAAA,EAAD,CACElC,GAAG,SACH+B,QAASlC,EACTmC,GAAG,OACHC,OAAO,mB,eCzDNE,EAAO,SAAC,GAA4B,IAA1B1C,EAAyB,EAAzBA,SAAaC,EAAY,iBACxCI,EAAKC,YAAkB,UAAW,YAExC,OACE,cAAC,IAAD,yBACEgB,KAAM,CAAEV,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,MACvCR,GAAG,OACHoC,GAAG,OACHC,WAAW,OACXC,KAAK,WACLtB,GAAG,OACHuB,MAAM,OACNzC,GAAIA,GACAJ,GATN,aAWGD,M,iBCbM+C,EAAS,SAAC9C,GACrB,IAAMI,EAAKC,YAAkB,WAAY,YAEzC,OACE,cAAC,IAAD,2BACML,GADN,IAEEM,GAAG,SACHS,GAAG,IACHX,GAAIA,EACJuC,WAAW,OACXI,UAAU,YACVC,eAAe,WAPjB,SASE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAM1C,MAAM,SAASkB,UAAU,MAA/B,SACE,cAAC,IAAD,CAAMF,GAAI,EAAG2B,EAAE,OAAO3C,MAAM,SAASkB,UAAU,MAA/C,SACGK,IAAMC,SAASC,IAAIhC,EAAMD,UAAU,SAACkC,GAAD,OAClC,cAAC,IAAD,UAAWA,iBCvBV,MAA0B,mCCiBnCkB,EAAOC,gBAAK,kBAAM,uDAClBC,EAAWD,gBAAK,kBAAM,iCACtBE,EAAgBF,gBAAK,kBAAM,iCA8ClBG,EA5CH,WACV,IAAMnD,EAAKC,YAAkB,UAAW,YAClCmD,EAAWC,cAGjB,OAFAC,QAAQC,IAAIH,EAASI,UAGnB,mCACE,eAAC,IAAD,CAAMnC,UAAU,SAASoC,UAAU,QAAQzD,GAAIA,EAA/C,UACE,cAAC,IAAD,IACuB,MAAtBoD,EAASI,UACR,eAAC,EAAD,WACE,cAAC,IAAD,CAAME,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,YAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,8BAGJ,cAAC,EAAD,CAAMC,GAA0B,MAAtBP,EAASI,UAAqB,GAAxC,SACE,cAAC,WAAD,CAAUI,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACf,EAAD,MAEF,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,YAAlB,SACE,cAACb,EAAD,MAEF,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,iBAAlB,SACE,cAACZ,EAAD,aAKR,cAAC,EAAD,UACE,cAAC,IAAD,CAAMa,KAAK,iCAAiCC,OAAO,SAAnD,SACE,eAAC,IAAD,CAAO1C,UAAQ,EAACnB,MAAM,SAAS8D,GAAG,OAAlC,UACE,cAAC,IAAD,CAAO9D,MAAM,WAAW+D,IAAI,cAAcC,IAAKC,IAC/C,cAAC,IAAD,kC,gBCpCCC,EAlBA,CACbC,OAAQ,SAAC1E,GAAD,MAAY,CAClB2C,WAAY,OACZ3B,MAAO2D,eAAK,WAAY,iBAAjBA,CAAmC3E,GAC1CI,GAAIuE,eAAK,QAAS,WAAdA,CAA0B3E,GAC9B4E,WAAY,OACZ,iBAAkB,CAChB5D,MAAO2D,eAAK,WAAY,iBAAjBA,CAAmC3E,IAE5C,yBAA0B,CACxB6E,YAAaF,eAAK,WAAY,iBAAjBA,CAAmC3E,GAChD8E,SAAU,cAEZC,oBAAoB,SACpBC,mBAAoB,uBCPlBC,EAAQC,YAAY,CAAEC,OALb,CACbC,iBAAkB,QAClBC,oBAAoB,KAKtBJ,EAAMR,OAASA,EAEAQ,QCLfK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQC,SAAS,IAAjB,UACE,cAAC,IAAD,CAAiBL,iBAAkBH,EAAME,OAAOC,mBAChD,cAAC,EAAD,WAINM,SAASC,eAAe,U,kICbb1C,EAAS,SAAC,GAAkC,IAAhC2C,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAY7F,EAAY,iBAChD8F,EAAM,CACV1E,KAAqB,IAAfyE,EAAQzE,KAAa,IAC3BR,GAAiB,IAAbiF,EAAQjF,GAAW,IACvBC,GAAiB,IAAbgF,EAAQhF,GAAW,IACvBC,GAAiB,IAAb+E,EAAQ/E,GAAW,KAGzB,OACE,cAAC,IAAD,uCACO8E,EACD,CAAEpE,EAAG,QACL,CACEH,KAAM,CAAEV,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,MACvCQ,GAAI,OACJC,GAAI,EACJC,EAAG,SAELxB,GATN,aAWE,cAAC,IAAD,CAAKwB,EAAGsE,EAAR,SAAc9F,EAAMD,eAW1BkD,EAAO8C,aAAe,CACpBH,OAAO,EACPC,QAAS,CAAEzE,KAAM,EAAGR,GAAI,EAAGC,GAAI,EAAGC,GAAI,M","file":"static/js/main.ac5c5b16.chunk.js","sourcesContent":["import React from 'react'\nimport { Link as ReactRouterLink } from 'react-router-dom'\nimport { Flex, Stack, useColorMode, useColorModeValue } from '@chakra-ui/react'\nimport { MoonIcon, SunIcon } from '@chakra-ui/icons'\nimport { node } from 'prop-types'\n\nexport const Navbar = ({ children, ...props }) => {\n  const { colorMode, toggleColorMode } = useColorMode()\n\n  const bg = useColorModeValue('#fff', 'gray.800')\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding={{ sm: '0.6rem', md: '0.80rem', lg: '1rem', xl: '1rem' }}\n      py=\"4px\"\n      bg={bg}\n      color=\"primary\"\n      borderBottom=\"2px solid\"\n      borderBottomColor=\"gray.300\"\n      display={{ base: 'flex', md: 'flex' }}\n      {...props}\n    >\n      <Flex\n        maxW={{ sm: 540, md: 768, lg: 960, xl: 1200 }}\n        mx=\"auto\"\n        px={4}\n        w=\"100%\"\n        align=\"center\"\n        direction=\"row\"\n      >\n        <Stack\n          isInline\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n          spacing=\"6\"\n          w=\"100%\"\n        >\n          {React.Children.map(children, (child) => {\n            if (child !== null) {\n              return React.cloneElement(child, {\n                as: ReactRouterLink,\n              })\n            }\n          })}\n        </Stack>\n        {colorMode === 'light' ? (\n          <MoonIcon\n            as=\"button\"\n            onClick={toggleColorMode}\n            ml=\"auto\"\n            cursor=\"pointer\"\n          />\n        ) : (\n          <SunIcon\n            as=\"button\"\n            onClick={toggleColorMode}\n            ml=\"auto\"\n            cursor=\"pointer\"\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nNavbar.propTypes = {\n  children: node,\n}\n","import React from 'react'\nimport { node } from 'prop-types'\nimport { Flex, useColorModeValue } from '@chakra-ui/react'\n\nexport const Main = ({ children, ...props }) => {\n  const bg = useColorModeValue('gray.50', 'gray.800')\n\n  return (\n    <Flex\n      maxW={{ sm: 540, md: 768, lg: 960, xl: 1200 }}\n      as=\"main\"\n      id=\"main\"\n      fontFamily=\"body\"\n      flex=\"1 0 auto\"\n      mx=\"auto\"\n      width=\"100%\"\n      bg={bg}\n      {...props}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nMain.propTypes = { children: node }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Flex, List, ListItem, useColorModeValue } from '@chakra-ui/react'\n\nimport { Layout } from './Layout'\n\nexport const Footer = (props) => {\n  const bg = useColorModeValue('gray.300', 'gray.800')\n\n  return (\n    <Flex\n      {...props}\n      as=\"footer\"\n      py=\"4\"\n      bg={bg}\n      fontFamily=\"body\"\n      borderTop=\"2px solid\"\n      borderTopColor=\"gray.300\"\n    >\n      <Layout>\n        <Flex align=\"center\" direction=\"row\">\n          <List px={0} d=\"flex\" align=\"center\" direction=\"row\">\n            {React.Children.map(props.children, (child) => (\n              <ListItem>{child}</ListItem>\n            ))}\n          </List>\n        </Flex>\n      </Layout>\n    </Flex>\n  )\n}\n\nFooter.propTypes = {\n  children: PropTypes.any,\n  bg: PropTypes.string,\n}\n","export default __webpack_public_path__ + \"static/media/github.e377eed4.svg\";","import React, { lazy, Suspense } from 'react'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport {\n  Flex,\n  Link,\n  CSSReset,\n  Image,\n  Stack,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\n\nimport { Navbar } from './components/Navbar'\nimport { Main } from './components/Main'\nimport { Footer } from './components/Footer'\nimport GithubLogo from './images/github.svg'\n\nconst Home = lazy(() => import('./pages/Home'))\nconst Projects = lazy(() => import('./pages/Projects'))\nconst Presentations = lazy(() => import('./pages/Presentations'))\n\nconst App = () => {\n  const bg = useColorModeValue('gray.50', 'gray.800')\n  const location = useLocation()\n  console.log(location.pathname)\n\n  return (\n    <>\n      <Flex direction=\"column\" minHeight=\"100vh\" bg={bg}>\n        <CSSReset />\n        {location.pathname !== '/' && (\n          <Navbar>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"/presentations\">Presentations</Link>\n          </Navbar>\n        )}\n        <Main pt={location.pathname !== '/' && (10)}>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/projects\">\n                <Projects />\n              </Route>\n              <Route exact path=\"/presentations\">\n                <Presentations />\n              </Route>\n            </Switch>\n          </Suspense>\n        </Main>\n        <Footer>\n          <Link href=\"https://github.com/nsdeschenes\" target=\"_blank\">\n            <Stack isInline align=\"center\" my=\"auto\">\n              <Image align=\"vertical\" alt=\"Github Logo\" src={GithubLogo} />\n              <Text>Github</Text>\n            </Stack>\n          </Link>\n        </Footer>\n      </Flex>\n    </>\n  )\n}\n\nexport default App\n","import { mode } from '@chakra-ui/react'\n\nconst styles = {\n  global: (props) => ({\n    fontFamily: 'body',\n    color: mode('gray.800', 'whiteAlpha.900')(props),\n    bg: mode('white', 'gray.800')(props),\n    lineHeight: 'base',\n    '*::placeholder': {\n      color: mode('gray.400', 'whiteAlpha.400')(props),\n    },\n    '*, *::before, &::after': {\n      borderColor: mode('gray.200', 'whiteAlpha.300')(props),\n      wordWrap: 'break-word',\n    },\n    fontFeatureSettings: `\"pnum\"`,\n    fontVariantNumeric: 'proportional-nums',\n  }),\n}\n\nexport default styles\n","import { extendTheme } from '@chakra-ui/react'\n\nimport styles from './styles'\n\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n}\n\nconst theme = extendTheme({ config })\n\ntheme.styles = styles\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react'\n\nimport App from './App'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <Router basename=\"/\">\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <App />\n      </Router>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box } from '@chakra-ui/react'\n\nexport const Layout = ({ fluid, columns, ...props }) => {\n  const col = {\n    base: columns.base * 100 + '%',\n    md: columns.md * 100 + '%',\n    lg: columns.lg * 100 + '%',\n    xl: columns.xl * 100 + '%',\n  }\n\n  return (\n    <Box\n      {...(fluid\n        ? { w: '100%' }\n        : {\n            maxW: { sm: 540, md: 768, lg: 960, xl: 1200 },\n            mx: 'auto',\n            px: 4,\n            w: '100%',\n          })}\n      {...props}\n    >\n      <Box w={col}>{props.children}</Box>\n    </Box>\n  )\n}\n\nLayout.propTypes = {\n  fluid: PropTypes.bool,\n  columns: PropTypes.any,\n  children: PropTypes.node,\n}\n\nLayout.defaultProps = {\n  fluid: false,\n  columns: { base: 1, md: 1, lg: 1, xl: 1 },\n}\n"],"sourceRoot":""}